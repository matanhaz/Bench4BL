# This is a basic workflow to help you get started with Actions

name: CI-tmp

# Controls when the action will run. 
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    
    strategy:
      fail-fast: false
      matrix:
        #techniques: [BugLocator,  BRTracer, BLUiR, AmaLgam,  BLIA, Locus]
        techniques: [BugLocator]
        group: [Commons]
        project: [CODEC]
        folder_name: [BugLocator_Codec]
        
 


    # Steps represent a sequence of tasks that will be executed as part of the job

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: first
        run: sudo apt install build-essential
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
    
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      # Runs a set of commands using the runners shell
      - name: Download subjects’ archives
        run: |
              pip install virtualenv
              cd `git rev-parse --show-toplevel`
              bootstrap/downloads.sh
      # Runs a set of commands using the runners shell
      - name: Download subjects’ archives
        run: |
              mkdir data
              bootstrap/unpacking.sh ./archives ./data ${{matrix.group}} ${{matrix.project}}
 
      - name: Download git
        run: |
              sudo apt install git
              
      - name: update data
        run: |
              cd `git rev-parse --show-toplevel`
              rm -r data/${{matrix.group}}/${{matrix.project}}/gitrepo/*
              cd data/${{matrix.group}}/${{matrix.project}}/gitrepo
              git clone https://github.com/apache/commons-codec.git
              mv commons-codec/* .
              mv commons-codec/.* .
              rm -rf commons-codec
            
              
              
      - name: Upload data2
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: all_data_start
          # A file, directory or wildcard pattern that describes what to upload
          path: ./data
          
              
      - name: Install Indri
        run: |
            mkdir depots
            cd depots
            wget https://excellmedia.dl.sourceforge.net/project/lemur/lemur/indri-5.15/indri-5.15.tar.gz
            tar -xzf indri-5.15.tar.gz
            cd indri-5.15
            ./configure --prefix=`pwd`/../install
            make
            make install
      - name: Generate Settings.txt file
        run: |
            echo indripath=`git rev-parse --show-toplevel`/depots/install/bin/ > `git rev-parse --show-toplevel`/techniques/Settings.txt
      - name: Create virtual environment
        run: |
            cd `git rev-parse --show-toplevel`
            virtualenv venv -p `which python2`
            # source venv/bin/activate
            pip install -r requirements.txt
      - name: Build JAR
        run: |
            bootstrap/buildjar.sh
#       - name: Source virtual environment
#         run: |
#             cd `git rev-parse --show-toplevel`
#             .venv/bin/activate

      - name: Modify PATH
        run: |
            export PATH=$PATH:`pwd`/depots/install/bin
      - name: ls
        run: ls -R

      - name: Inflate the source codes
        run: |
            cd `git rev-parse --show-toplevel`/scripts
            python launcher_GitInflator.py  -g ${{matrix.group}} -p ${{matrix.project}}
            
      - name: Upload data2
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: all_data_center
          # A file, directory or wildcard pattern that describes what to upload
          path: ./data

      - name: Build bug repositories
        run: |
              cd `git rev-parse --show-toplevel`/scripts
              python launcher_repoMaker.py  -g ${{matrix.group}} -p ${{matrix.project}}
              python launcher_DupRepo.py  -g ${{matrix.group}} -p ${{matrix.project}}
              python Counting.py  -g ${{matrix.group}} -p ${{matrix.project}}
#       - name: Execute previous techniques
#         run: |
#               mkdir -p ../techniques/locus_properties
#               mkdir -p ../techniques/blia_properties
#               cd `git rev-parse --show-toplevel`/scripts
#               python launcher_Tool.py -w Exp1   -g Apache -p CAMEL



      - name: Collect performance results
        run: |
              cd `git rev-parse --show-toplevel`/scripts
              python launcher_Tool.py -w ${{matrix.folder_name}}   -g ${{matrix.group}} -p ${{matrix.project}} -t ${{matrix.techniques}}
#              python launcher_Tool.py -w ExpFirst   -g Apache -p CAMEL -t ${{ matrix.techniques }}

      - name: save performance results
        run: |
              cd `git rev-parse --show-toplevel`/scripts
              python launcher_XLSResultsAll.py -w ${{matrix.folder_name}}
#       - name: Upload data
#         if: ${{ always() }}
#         uses: actions/upload-artifact@v2
#         with:
#           # Artifact name
#           name: all_data
#           # A file, directory or wildcard pattern that describes what to upload
#           path: ./expresults
          
      - name: Upload data2
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: all_data
          # A file, directory or wildcard pattern that describes what to upload
          path: ./data
          
